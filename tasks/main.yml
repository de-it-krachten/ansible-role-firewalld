---

- name: Load variables based on OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "family-{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "family-{{ ansible_os_family }}.yml"
        - default.yml
      paths:
        - 'vars'

- name: Supported on Debian >= 11
  fail:
    msg: Not supported on {{ ansible_distribution }} < 11
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 11

- name: Supported on Ubuntu >= 20
  fail: 
    msg: Not supported on {{ ansible_distribution }} < 20
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 20

- name: Show support message
  fail:
    msg:
      - "Role 'firewalld' is not supported on {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
  when: firewalld_unsupported is defined and not firewalld_unsupported

- name: Install firewalld packages
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ firewalld_packages }}"

- name: Populate service facts
  service_facts:

- name: Disable iptables
  systemd:
    name: iptables
    state: stopped
    enabled: no
    masked: yes
    daemon_reload: yes
  when:
    - ansible_facts.services['iptables.service'] is defined
    - ansible_facts.services['iptables.service']['status'] not in [ 'disabled', 'not-found' ]

- name: Enable firewalld
  systemd:
    name: firewalld
    state: started
    enabled: yes
    masked: no
    daemon_reload: yes

- name: Add trusted interfaces to zone 'trusted'
  firewalld:
    zone: trusted
    state: enabled
    permanent: yes
    interface: "{{ item }}"
  loop: "{{ firewalld_trusted_interfaces }}"
  when:
    - ansible_interfaces is defined
    - item in ansible_interfaces

- name: Remove docker0 from zone 'trusted'
  firewalld:
    zone: trusted
    state: disabled
    permanent: yes
    interface: docker0
  when:
    - ansible_interfaces is defined
    - 'docker0' in ansible_interfaces
    - 'docker0' not in firewalld_trusted_interfaces
